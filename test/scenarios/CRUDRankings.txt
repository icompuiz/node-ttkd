Scenario: CRUD Available rankings per program

	Feature: Return a list of all rankings
		Unit: get('/api/rankings') returns an array of all the rankings

	Feature: Create a ranking and add it to the database
		Unit: ranking name is valid
			Unit: ranking name is alphanumeric
				/(a-zA-Z0-9)/
				Accept: ljkjflaksjdf09sf09a0s9df0sdlfJLKJSOIJ
				Reject: !@&&$*(@_)_"?><.,
				Test for error status code
			Unit: ranking name is between 2 and 64 characters
		Unit: ranking has a valid program
		Unit: ranking has a valid order number
			Unit: no other ranking with the same program shares the order number
	
	Feature: Read a ranking from the database
		Unit: ranking_id matches url_id
	
	Feature: Update an existing ranking in the database
		Unit: Change is made
			Unit: Change order
			Unit: Change name
	
	Feature: Delete a ranking in the database
		Unit: Url_id has no ranking_id match